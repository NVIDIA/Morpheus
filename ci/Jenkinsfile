@Library('jenkins_shared_lib') _

pipeline {
    agent any
    options {
        disableConcurrentBuilds(abortPrevious: true)
    }
    environment {
        PYTHON_VER = '3.8'
        RAPIDS_VER = '22.08'
        CUDA_VER = '11.5'
        USE_SCCACHE = '1'
        HOME = "${WORKSPACE}"
        BUILD_TYPE = sh(returnStdout: true, script: 'rapids-build-type')
    }
    stages {
        stage('Checks & Builds') {
            failFast true
            parallel {
                stage('Check') {
                    options {
                        timeout(time: 1, unit: 'HOURS')
                    }
                    environment {
                        GH_TOKEN = credentials('gputester-github-token')
                    }
                    when { environment name: 'BUILD_TYPE', value: 'pull-request' }
                    agent {
                        docker {
                            image 'gpuci/rapidsai-driver:22.04-cuda11.5-devel-centos7-py3.8'
                            label 'cpu'
                        }
                    }
                    steps {
                        cleanWs(
                            deleteDirs: true,
                            externalDelete: 'sudo rm -rf %s'
                        )
                        checkout scm
                        withCredentials([[
                            $class: 'AmazonWebServicesCredentialsBinding',
                            credentialsId: "aws-s3-gpuci",
                            accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                            secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                        ]])
                        {
                            sh "${WORKSPACE}/ci/scripts/jenkins/checks.sh"
                        }
                    }
                }

            }
        }

    }
    post {
        always {
                cleanWs(
                    deleteDirs: true,
                    externalDelete: 'sudo rm -rf %s'
                )
        }
    }
}
