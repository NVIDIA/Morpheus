{
   "module_id": "DFPDeployment",
   "module_name": "dfp_deployment",
   "namespace": "morpheus",
   "fsspec": {
      "loaders": [
         {
            "id": "fsspec"
         }
      ]
   },
   "DFPTrainingPipe": {
      "DFPPreproc": {
         "FileBatcher": {
            "period": "D",
            "sampling_rate_s": 0,
            "start_time": "2022-08-01 00:00:00+00:00",
            "end_time": "2022-09-30 00:00:00+00:00",
            "iso_date_regex_pattern": "(?P<year>\\d{4})-(?P<month>\\d{1,2})-(?P<day>\\d{1,2})T(?P<hour>\\d{1,2})(:|_)(?P<minute>\\d{1,2})(:|_)(?P<second>\\d{1,2})(?P<microsecond>\\.\\d{1,6})?Z",
            "timestamp_column_name": "timestamp",
            "parser_kwargs": {
               "lines": false,
               "orient": "records"
            },
            "cache_dir": "./.cache/dfp",
            "filter_null": true,
            "file_type": "JSON",
            "schema": {
               "schema_str": "\u0080\u0004\u0095e\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u008c\u001amorpheus.utils.column_info\u0094\u008c\u0014DataFrameInputSchema\u0094\u0093\u0094)\u0081\u0094}\u0094(\u008c\fjson_columns\u0094]\u0094(\u008c\raccess_device\u0094\u008c\u000bapplication\u0094\u008c\u000bauth_device\u0094\u008c\u0004user\u0094e\u008c\u000bcolumn_info\u0094]\u0094(h\u0000\u008c\u000eDateTimeColumn\u0094\u0093\u0094)\u0081\u0094}\u0094(\u008c\u0004name\u0094\u008c\ttimestamp\u0094\u008c\u0005dtype\u0094\u008c\bdatetime\u0094\u008c\bdatetime\u0094\u0093\u0094\u008c\ninput_name\u0094\u008c\ttimestamp\u0094ubh\u0000\u008c\fRenameColumn\u0094\u0093\u0094)\u0081\u0094}\u0094(h\u0011\u008c\busername\u0094h\u0013\u008c\bbuiltins\u0094\u008c\u0003str\u0094\u0093\u0094h\u0017\u008c\tuser.name\u0094ubh\u001a)\u0081\u0094}\u0094(h\u0011\u008c\u0013accessdevicebrowser\u0094h\u0013h h\u0017\u008c\u0015access_device.browser\u0094ubh\u001a)\u0081\u0094}\u0094(h\u0011\u008c\u000eaccessdeviceos\u0094h\u0013h h\u0017\u008c\u0010access_device.os\u0094ubh\u0000\u008c\u000fStringCatColumn\u0094\u0093\u0094)\u0081\u0094}\u0094(h\u0011\u008c\blocation\u0094h\u0013h \u008c\rinput_columns\u0094]\u0094(\u008c\u001baccess_device.location.city\u0094\u008c\u001caccess_device.location.state\u0094\u008c\u001eaccess_device.location.country\u0094e\u008c\u0003sep\u0094\u008c\u0002, \u0094ubh\u001a)\u0081\u0094}\u0094(h\u0011\u008c\u000eauthdevicename\u0094h\u0013h h\u0017\u008c\u0010auth_device.name\u0094ubh\u0000\u008c\nBoolColumn\u0094\u0093\u0094)\u0081\u0094}\u0094(h\u0011\u008c\u0006result\u0094h\u0013h\u001e\u008c\u0004bool\u0094\u0093\u0094h\u0017h>\u008c\tvalue_map\u0094}\u0094(\u008c\u0007success\u0094\u0088\u008c\u0007SUCCESS\u0094\u0088\u008c\u0006denied\u0094\u0089\u008c\u0006DENIED\u0094\u0089\u008c\u0005FRAUD\u0094\u0089uubh\u0000\u008c\nColumnInfo\u0094\u0093\u0094)\u0081\u0094}\u0094(h\u0011\u008c\u0006reason\u0094h\u0013h ube\u008c\u0010preserve_columns\u0094N\u008c\nrow_filter\u0094Nub.",
               "encoding": "latin1"
            },
            "task_type": "training"
         },
         "file_to_df": {
            "loaders": [
               {
                  "id": "file_to_df"
               }
            ],
            "module_name": "dfp_file_to_df_dataloader_tra"
         },
         "DFPSplitUsers": {
            "include_generic": true,
            "include_individual": false,
            "skip_users": [],
            "only_users": [],
            "timestamp_column_name": "timestamp",
            "userid_column_name": "username",
            "fallback_username": "generic_user"
         }
      },
      "DFPRollingWindow": {
         "min_history": 300,
         "min_increment": 300,
         "max_history": "60d",
         "cache_dir": "./.cache/dfp",
         "timestamp_column_name": "timestamp"
      },
      "DFPDataPrep": {
         "timestamp_column_name": "timestamp",
         "schema": {
            "schema_str": "\u0080\u0004\u0095\u00c9\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u008c\u001amorpheus.utils.column_info\u0094\u008c\u0014DataFrameInputSchema\u0094\u0093\u0094)\u0081\u0094}\u0094(\u008c\fjson_columns\u0094]\u0094\u008c\u000bcolumn_info\u0094]\u0094(h\u0000\u008c\nColumnInfo\u0094\u0093\u0094)\u0081\u0094}\u0094(\u008c\u0004name\u0094\u008c\ttimestamp\u0094\u008c\u0005dtype\u0094\u008c\bdatetime\u0094\u008c\bdatetime\u0094\u0093\u0094ubh\n)\u0081\u0094}\u0094(h\r\u008c\busername\u0094h\u000f\u008c\bbuiltins\u0094\u008c\u0003str\u0094\u0093\u0094ubh\n)\u0081\u0094}\u0094(h\r\u008c\u0013accessdevicebrowser\u0094h\u000fh\u0018ubh\n)\u0081\u0094}\u0094(h\r\u008c\u000eaccessdeviceos\u0094h\u000fh\u0018ubh\n)\u0081\u0094}\u0094(h\r\u008c\u000eauthdevicename\u0094h\u000fh\u0018ubh\n)\u0081\u0094}\u0094(h\r\u008c\u0006result\u0094h\u000fh\u0016\u008c\u0004bool\u0094\u0093\u0094ubh\n)\u0081\u0094}\u0094(h\r\u008c\u0006reason\u0094h\u000fh\u0018ubh\u0000\u008c\u000fIncrementColumn\u0094\u0093\u0094)\u0081\u0094}\u0094(h\r\u008c\blogcount\u0094h\u000fh\u0016\u008c\u0003int\u0094\u0093\u0094\u008c\ninput_name\u0094h\u000e\u008c\u000egroupby_column\u0094h\u0015\u008c\u0006period\u0094\u008c\u0001D\u0094ubh\u0000\u008c\fCustomColumn\u0094\u0093\u0094)\u0081\u0094}\u0094(h\r\u008c\flocincrement\u0094h\u000fh0\u008c\u0011process_column_fn\u0094\u008c\tfunctools\u0094\u008c\u0007partial\u0094\u0093\u0094h\u0000\u008c\u0014create_increment_col\u0094\u0093\u0094\u0085\u0094R\u0094(h?)}\u0094\u008c\u000bcolumn_name\u0094\u008c\blocation\u0094sNt\u0094bube\u008c\u0010preserve_columns\u0094\u008c\u0002re\u0094\u008c\b_compile\u0094\u0093\u0094\u008c\u000b(_batch_id)\u0094K \u0086\u0094R\u0094\u008c\nrow_filter\u0094Nub.",
            "encoding": "latin1"
         }
      },
      "DFPTraining": {
         "model_kwargs": {
            "encoder_layers": [
               512,
               500
            ],
            "decoder_layers": [
               512
            ],
            "activation": "relu",
            "swap_p": 0.2,
            "lr": 0.001,
            "lr_decay": 0.99,
            "batch_size": 512,
            "verbose": false,
            "optimizer": "sgd",
            "scaler": "standard",
            "min_cats": 1,
            "progress_bar": false,
            "device": "cuda"
         },
         "feature_columns": [
            "accessdevicebrowser",
            "accessdeviceos",
            "authdevicename",
            "reason",
            "result",
            "locincrement",
            "logcount"
         ],
         "epochs": 30,
         "validation_size": 0.1
      },
      "MLFlowModelWriter": {
         "model_name_formatter": "DFP-duo-{user_id}",
         "experiment_name_formatter": "dfp/duo/training/{reg_model_name}",
         "timestamp_column_name": "timestamp",
         "conda_env": {
            "channels": [
               "defaults",
               "conda-forge"
            ],
            "dependencies": [
               "python=3.8",
               "pip"
            ],
            "pip": [
               "mlflow",
               "dfencoder"
            ],
            "name": "mlflow-env"
         },
         "databricks_permissions": null
      }
   },
   "DFPInferencePipe": {
      "DFPPreproc": {
         "FileBatcher": {
            "period": "D",
            "sampling_rate_s": 0,
            "start_time": "2022-08-01 00:00:00+00:00",
            "end_time": "2022-09-30 00:00:00+00:00",
            "iso_date_regex_pattern": "(?P<year>\\d{4})-(?P<month>\\d{1,2})-(?P<day>\\d{1,2})T(?P<hour>\\d{1,2})(:|_)(?P<minute>\\d{1,2})(:|_)(?P<second>\\d{1,2})(?P<microsecond>\\.\\d{1,6})?Z",
            "timestamp_column_name": "timestamp",
            "parser_kwargs": {
               "lines": false,
               "orient": "records"
            },
            "cache_dir": "./.cache/dfp",
            "filter_null": true,
            "file_type": "JSON",
            "schema": {
               "schema_str": "\u0080\u0004\u0095e\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u008c\u001amorpheus.utils.column_info\u0094\u008c\u0014DataFrameInputSchema\u0094\u0093\u0094)\u0081\u0094}\u0094(\u008c\fjson_columns\u0094]\u0094(\u008c\raccess_device\u0094\u008c\u000bapplication\u0094\u008c\u000bauth_device\u0094\u008c\u0004user\u0094e\u008c\u000bcolumn_info\u0094]\u0094(h\u0000\u008c\u000eDateTimeColumn\u0094\u0093\u0094)\u0081\u0094}\u0094(\u008c\u0004name\u0094\u008c\ttimestamp\u0094\u008c\u0005dtype\u0094\u008c\bdatetime\u0094\u008c\bdatetime\u0094\u0093\u0094\u008c\ninput_name\u0094\u008c\ttimestamp\u0094ubh\u0000\u008c\fRenameColumn\u0094\u0093\u0094)\u0081\u0094}\u0094(h\u0011\u008c\busername\u0094h\u0013\u008c\bbuiltins\u0094\u008c\u0003str\u0094\u0093\u0094h\u0017\u008c\tuser.name\u0094ubh\u001a)\u0081\u0094}\u0094(h\u0011\u008c\u0013accessdevicebrowser\u0094h\u0013h h\u0017\u008c\u0015access_device.browser\u0094ubh\u001a)\u0081\u0094}\u0094(h\u0011\u008c\u000eaccessdeviceos\u0094h\u0013h h\u0017\u008c\u0010access_device.os\u0094ubh\u0000\u008c\u000fStringCatColumn\u0094\u0093\u0094)\u0081\u0094}\u0094(h\u0011\u008c\blocation\u0094h\u0013h \u008c\rinput_columns\u0094]\u0094(\u008c\u001baccess_device.location.city\u0094\u008c\u001caccess_device.location.state\u0094\u008c\u001eaccess_device.location.country\u0094e\u008c\u0003sep\u0094\u008c\u0002, \u0094ubh\u001a)\u0081\u0094}\u0094(h\u0011\u008c\u000eauthdevicename\u0094h\u0013h h\u0017\u008c\u0010auth_device.name\u0094ubh\u0000\u008c\nBoolColumn\u0094\u0093\u0094)\u0081\u0094}\u0094(h\u0011\u008c\u0006result\u0094h\u0013h\u001e\u008c\u0004bool\u0094\u0093\u0094h\u0017h>\u008c\tvalue_map\u0094}\u0094(\u008c\u0007success\u0094\u0088\u008c\u0007SUCCESS\u0094\u0088\u008c\u0006denied\u0094\u0089\u008c\u0006DENIED\u0094\u0089\u008c\u0005FRAUD\u0094\u0089uubh\u0000\u008c\nColumnInfo\u0094\u0093\u0094)\u0081\u0094}\u0094(h\u0011\u008c\u0006reason\u0094h\u0013h ube\u008c\u0010preserve_columns\u0094N\u008c\nrow_filter\u0094Nub.",
               "encoding": "latin1"
            },
            "task_type": "inference"
         },
         "file_to_df": {
            "loaders": [
               {
                  "id": "file_to_df"
               }
            ],
            "module_name": "dfp_file_to_df_dataloader_inf"
         },
         "DFPSplitUsers": {
            "include_generic": true,
            "include_individual": false,
            "skip_users": [],
            "only_users": [],
            "timestamp_column_name": "timestamp",
            "userid_column_name": "username",
            "fallback_username": "generic_user"
         }
      },
      "DFPRollingWindow": {
         "min_history": 1,
         "min_increment": 0,
         "max_history": "1d",
         "cache_dir": "./.cache/dfp",
         "timestamp_column_name": "timestamp"
      },
      "DFPDataPrep": {
         "timestamp_column_name": "timestamp",
         "schema": {
            "schema_str": "\u0080\u0004\u0095\u00c9\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u008c\u001amorpheus.utils.column_info\u0094\u008c\u0014DataFrameInputSchema\u0094\u0093\u0094)\u0081\u0094}\u0094(\u008c\fjson_columns\u0094]\u0094\u008c\u000bcolumn_info\u0094]\u0094(h\u0000\u008c\nColumnInfo\u0094\u0093\u0094)\u0081\u0094}\u0094(\u008c\u0004name\u0094\u008c\ttimestamp\u0094\u008c\u0005dtype\u0094\u008c\bdatetime\u0094\u008c\bdatetime\u0094\u0093\u0094ubh\n)\u0081\u0094}\u0094(h\r\u008c\busername\u0094h\u000f\u008c\bbuiltins\u0094\u008c\u0003str\u0094\u0093\u0094ubh\n)\u0081\u0094}\u0094(h\r\u008c\u0013accessdevicebrowser\u0094h\u000fh\u0018ubh\n)\u0081\u0094}\u0094(h\r\u008c\u000eaccessdeviceos\u0094h\u000fh\u0018ubh\n)\u0081\u0094}\u0094(h\r\u008c\u000eauthdevicename\u0094h\u000fh\u0018ubh\n)\u0081\u0094}\u0094(h\r\u008c\u0006result\u0094h\u000fh\u0016\u008c\u0004bool\u0094\u0093\u0094ubh\n)\u0081\u0094}\u0094(h\r\u008c\u0006reason\u0094h\u000fh\u0018ubh\u0000\u008c\u000fIncrementColumn\u0094\u0093\u0094)\u0081\u0094}\u0094(h\r\u008c\blogcount\u0094h\u000fh\u0016\u008c\u0003int\u0094\u0093\u0094\u008c\ninput_name\u0094h\u000e\u008c\u000egroupby_column\u0094h\u0015\u008c\u0006period\u0094\u008c\u0001D\u0094ubh\u0000\u008c\fCustomColumn\u0094\u0093\u0094)\u0081\u0094}\u0094(h\r\u008c\flocincrement\u0094h\u000fh0\u008c\u0011process_column_fn\u0094\u008c\tfunctools\u0094\u008c\u0007partial\u0094\u0093\u0094h\u0000\u008c\u0014create_increment_col\u0094\u0093\u0094\u0085\u0094R\u0094(h?)}\u0094\u008c\u000bcolumn_name\u0094\u008c\blocation\u0094sNt\u0094bube\u008c\u0010preserve_columns\u0094\u008c\u0002re\u0094\u008c\b_compile\u0094\u0093\u0094\u008c\u000b(_batch_id)\u0094K \u0086\u0094R\u0094\u008c\nrow_filter\u0094Nub.",
            "encoding": "latin1"
         }
      },
      "DFPInference": {
         "model_name_formatter": "DFP-duo-{user_id}",
         "fallback_username": "generic_user",
         "timestamp_column_name": "timestamp"
      },
      "FilterDetections": {
         "field_name": "mean_abs_z",
         "threshold": 2.0,
         "filter_source": "DATAFRAME",
         "schema": {
            "input_message_type": "\u0080\u0004\u00954\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u008c\u001fmorpheus.messages.multi_message\u0094\u008c\fMultiMessage\u0094\u0093\u0094.",
            "encoding": "latin1"
         }
      },
      "DFPPostProcessing": {
         "timestamp_column_name": "timestamp"
      },
      "Serialize": {
         "exclude": [
            "batch_count",
            "origin_hash",
            "_row_hash",
            "_batch_id"
         ],
         "use_cpp": true
      },
      "WriteToFile": {
         "filename": "dfp_detections_duo.csv",
         "overwrite": true
      }
   },
   "output_port_count": 2
}